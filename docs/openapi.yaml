openapi: 3.1.0
info:
  title: Auth Service API
  description: API for authentication and authorization
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local auth service
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Register a new user with the provided details.
      requestBody:
        description: User information
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "tienthanh"
                password:
                  type: string
                  example: password123
                name:
                  type: string
                  example: Tien Thanh
                email:
                  type: string
                  format: email
                  example: thanhnt208@vcs.com
                role:
                  type: string
                  enum: [sudo, admin, user]
                  example: user
              required:
                - username
                - password
                - name
                - role
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
                  userId:
                    type: integer
                    example: 29
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid input data
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /auth/login:
    post:
      summary: User login
      description: Authenticate user and return JWT token.
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "tienthanh"
                password:
                  type: string
                  example: password123
              required:
                - username
                - password
      responses:
        "200":
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT token for authentication
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  tokenType:
                    type: string
                    example: bearer
                  expiresIn:
                    type: integer
                    description: Token expiration time in seconds
                    example: 3600
        "400":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid username or password
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /auth/refresh-token:
    post:
      summary: Refresh JWT token
      description: Refresh the JWT token using the refresh token.
      security:
        - BearerAuth: []
      requestBody:
        description: Refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              required:
                - refreshToken
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: New JWT token for authentication
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  tokenType:
                    type: string
                    example: bearer
                  expiresIn:
                    type: integer
                    description: Token expiration time in seconds
                    example: 3600
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired refresh token
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /auth/logout:
    post:
      summary: User logout
      description: Invalidate the JWT token.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
